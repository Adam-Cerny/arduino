#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

const char* ssid = "iPhone (152)";
const char* password = "123456789";
const char* server = "https://adamcerny.eu/actions/get_status.php?pin=";

const int pins[] = {12, 13, 14, 26, 27, 32, 33};  
const int pinCount = sizeof(pins) / sizeof(pins[0]); 

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);

    int attempts = 0;
    while (WiFi.status() != WL_CONNECTED && attempts < 15) {
        delay(100);
        Serial.println("Connecting to WiFi...");
        attempts++;
    }

    if (WiFi.status() == WL_CONNECTED) {
        Serial.println("Connected to WiFi!");
    } else {
        Serial.println("Failed to connect to WiFi, restarting...");
        ESP.restart();  
    }

    for (int i = 0; i < pinCount; i++) {
        pinMode(pins[i], OUTPUT);
    }
}

void loop() {
    if (WiFi.status() != WL_CONNECTED) {
        Serial.println("WiFi disconnected, restarting...");
        ESP.restart();
    }

    unsigned long startTime = millis();  

    for (int i = 0; i < pinCount; i++) {
        int currentPin = pins[i];
        String url = String(server) + String(currentPin);
        
        HTTPClient http;
        http.begin(url);
        int httpResponseCode = http.GET();

        if (httpResponseCode > 0) {
            String payload = http.getString();
            Serial.printf("Response for pin %d: %s\n", currentPin, payload.c_str());

            StaticJsonDocument<200> doc;
            DeserializationError error = deserializeJson(doc, payload);

            if (!error) {
                int status = doc["status"];
                Serial.printf("Pin: %d, Status: %d\n", currentPin, status);
                digitalWrite(currentPin, status ? HIGH : LOW);
            } else {
                Serial.println("JSON parsing error!");
            }
        } else {
            Serial.printf("Error in HTTP request: %d\n", httpResponseCode);
        }

        http.end();
        delay(20);  
    }

    Serial.printf("Loop time: %lu ms\n", millis() - startTime);
    delay(200);  
}
